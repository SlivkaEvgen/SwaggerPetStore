package org.example.repository;import com.google.gson.Gson;import lombok.SneakyThrows;import okhttp3.*;import org.example.model.Order;import org.example.repository.interfaces.StoreRepository;import org.example.util.PropertiesLoader;import java.net.URI;public class StoreRepositoryImpl implements StoreRepository {  private final OkHttpClient OK_CLIENT = new OkHttpClient();  private final String URI_STORE = PropertiesLoader.getProperties("uriStore");  private final Gson GSON = new Gson();  // 200 delete by id  @SneakyThrows  @Override  public void deleteOrderById(Integer orderId) {    URI uri = URI.create(URI_STORE + "/" + orderId);    // https://petstore.swagger.io/v2/store/order/2    Request request = new Request.Builder().url(HttpUrl.get(uri)).delete().build();    Response response = OK_CLIENT.newCall(request).execute();    System.out.println("deleteOrderById $ " + response.code());    System.out.println("deleteOrderById $ " + response.body().string() + "\n");    response.close();  }  // 200 find by ID  @SneakyThrows  @Override  public void findOrderById(Integer petId) {    URI uri = URI.create(URI_STORE + "/order/" + petId);    // https://petstore.swagger.io/v2/store/order/2    Request request = new Request.Builder().url(HttpUrl.get(uri)).build();    Response response = OK_CLIENT.newCall(request).execute();    System.out.println("findOrderById $ " + response.code());    System.out.println("findOrderById $ " + response.body().string() + "\n");    response.close();  }  // 200 place  @SneakyThrows  @Override  public void placeAnOrderForAPet(Order order) {    URI uri = URI.create(URI_STORE + "/order");    // https://petstore.swagger.io/v2/store/order    //      order = new Order();    //      order.setId(1L);    //      order.setStatus("placed");    //      order.setComplete(true);    //      order.setPetId(2L);    //      order.setQuantity(0L);    //      order.setShipDate("2021-08-30T13:58:48.140Z");    RequestBody requestBody =        new Request.Builder()            .url(HttpUrl.get(uri))            .post(                RequestBody.create(                    MediaType.parse("application/json; charset=utf-8"), GSON.toJson(order)))            .header("Content-type", "application/json")            .build()            .body();    Response response =        OK_CLIENT            .newCall(new Request.Builder().url(HttpUrl.get(uri)).post(requestBody).build())            .execute();    System.out.println("placeAnOrderForAPet $ " + response.code());    System.out.println("placeAnOrderForAPet $ " + response.body().string() + "\n");    response.close();  }  // 200 inventories  @SneakyThrows  @Override  public void returnsPetInventoriesByStatus() {    URI uri = URI.create(URI_STORE + "/inventory");    // https://petstore.swagger.io/v2/store/inventory    Request request = new Request.Builder().url(HttpUrl.get(uri)).get().build();    Response response = OK_CLIENT.newCall(request).execute();    System.out.println("returnsPetInventoriesByStatus $ " + response.code());    System.out.println("returnsPetInventoriesByStatus $ " + response.body().string() + "\n");    response.close();  }}