package org.example.controller.user;import org.example.config.ScannerConsole;import org.example.controller.Controller;import org.example.controller.EnterCommands;import org.example.model.User;import org.example.service.UserServiceImpl;import java.util.ArrayList;import java.util.List;import java.util.Scanner;// 50/50public class UserCreateControllerImpl implements Controller {  private final Scanner scanner = ScannerConsole.getInstance();  private final List<User> userList = new ArrayList<>();  private final EnterCommands enterCommands = new EnterCommands();  @Override  public void start() {    System.out.print(        "\n \uD83D\uDC49 USER\n \uD83D\uDC49 LIST \n   \uD83D\uDC49 BACK \n   \uD83D\uDC49 STOP\n\uD83D\uDC49 ");    String next = scanner.next();    if (next.equalsIgnoreCase("user")) {      createUser();      start();    }    if (next.equalsIgnoreCase("list")) {      createList();      start();    }    if (next.equalsIgnoreCase("back")) {      new UserControllerImpl().start();    }    if (next.equalsIgnoreCase("stop")) {      stop();    } else {      System.out.print("\n      ⚠️ Wrong ⚠️ \n \uD83D\uDCAC Please, enter again \n");      start();    }  }  private void createUser() {    User newUser =        new UserServiceImpl()            .createNewUser(                Integer.valueOf(enterCommands.enterId()),                enterCommands.enterName(),                enterCommands.enterFirstName(),                enterCommands.enterLastName(),                enterCommands.enterPassword(),                enterCommands.enterEmail(),                enterCommands.enterPhone());    System.out.println(" ✅ Successfully");    userList.add(newUser);    questionAddMore();  }  private void createList() {    questionCreateList();  }  private void completeList() {    Integer listUsers = new UserServiceImpl().createListUsers(userList);    if (listUsers == 200) {      System.out.println(" ✅ Successfully");      start();    } else {      System.out.print("\n      ⚠️ Wrong ⚠️ \n \uD83D\uDCAC Please, enter again \n");    }  }  private void questionAddMore() {    System.out.print("Create new user ? \n \uD83D\uDC49 yes \n \uD83D\uDC49 no \n \uD83D\uDC49 ");    String next = scanner.next();    if (next.equalsIgnoreCase("yes")) {      createUser();    }    if (next.equalsIgnoreCase("no")) {      completeList();    } else {      System.out.print("\n      ⚠️ Wrong ⚠️ \n \uD83D\uDCAC Please, enter again \n");    }  }  private void questionCreateList() {    System.out.print(        "To create users and add to the list? \n \uD83D\uDC49 yes \n \uD83D\uDC49 no \n \uD83D\uDC49 ");    if (scanner.next().equalsIgnoreCase("yes")) {      createUser();    }    if (scanner.next().equalsIgnoreCase("no")) {      start();    } else {      System.out.print("\n      ⚠️ Wrong ⚠️ \n \uD83D\uDCAC Please, enter again \n");    }  }  @Override  public void stop() {    System.exit(0);    scanner.close();  }}